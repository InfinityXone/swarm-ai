# Canonical ENV schema for Etherverse Orchestration
vars:
  # Broker
  INFINITY_BROKER_SECRET: {type: string, required: true, scope: local, description: "JWT signing secret for broker"}
  BROKER_ALLOWED_ORIGINS: {type: string, required: false, scope: local, description: "CSV allowlist"}
  CLOUDFLARED_TUNNEL_URL: {type: url, required: false, scope: local, description: "Public URL to the broker"}

  # GitHub (prefer App)
  GITHUB_APP_ID: {type: string, required: false, scope: github, description: "GitHub App ID"}
  GITHUB_APP_INSTALLATION_ID: {type: string, required: false, scope: github, description: "App installation ID"}
  GITHUB_PRIVATE_KEY_PATH: {type: path, required: false, scope: local, description: "Path to GitHub App PEM"}
  GITHUB_PAT: {type: string, required: false, scope: github, description: "Fallback PAT (scoped)"}
  GITHUB_ORG: {type: string, required: false, scope: github, description: "Org/user for repos"}

  # Vercel
  VERCEL_TOKEN: {type: string, required: false, scope: vercel, description: "Vercel personal token"}
  VERCEL_TEAM: {type: string, required: false, scope: vercel, description: "Vercel team slug"}

  # Cloudflare (as a hub)
  CF_ACCOUNT: {type: string, required: false, scope: cloudflare, description: "Cloudflare account ID"}
  CF_PROJECT: {type: string, required: false, scope: cloudflare, description: "Pages project name"}
  CF_API_TOKEN: {type: string, required: false, scope: cloudflare, description: "API token for Pages+Workers"}

  # Supabase
  SUPABASE_URL: {type: url, required: false, scope: common, description: "Supabase URL"}
  SUPABASE_SERVICE_ROLE_KEY: {type: string, required: false, scope: common, description: "Service role key"}

  # AI Providers
  OPENAI_API_KEY: {type: string, required: false, scope: common, description: "OpenAI key"}
  XAI_API_KEY: {type: string, required: false, scope: common, description: "xAI key"}
  GROQ_API_KEY: {type: string, required: false, scope: common, description: "Groq key"}
  REPLICATE_API_TOKEN: {type: string, required: false, scope: common, description: "Replicate token"}
  HF_TOKEN: {type: string, required: false, scope: common, description: "HuggingFace token"}

  # Web3 / Faucets
  ETHERSCAN_API_KEY_1: {type: string, required: false, scope: common, description: "Etherscan v2 key #1"}
  ETHERSCAN_API_KEY_2: {type: string, required: false, scope: common, description: "Etherscan v2 key #2"}
  ETHERSCAN_API_KEY_3: {type: string, required: false, scope: common, description: "Etherscan v2 key #3"}

  # n8n
  N8N_BASIC_AUTH_USER: {type: string, required: false, scope: local, description: "n8n user"}
  N8N_BASIC_AUTH_PASSWORD: {type: string, required: false, scope: local, description: "n8n pass"}
